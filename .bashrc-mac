# Set the paths
PATH=~/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/sbin:/Volumes/Data/jesse/.gem/ruby/1.8/bin:~/dev/android/tools:~/dev/android/platform-tools:${PATH}

# leverage nventory for ssh connections
nvssh () {
    ssh $(nv --exclude status=decom --name $1 | head -n1)
}

nvrssh () {
    ssh -l root $(nv --exclude status=decom --name $1 | head -n1)
}

nvcssh () {
    csshX $(nv --exclude status=decom --name $1 | awk -v ORS=' ' 1)
}
nvrcssh () {
    csshX -l root $(nv --exclude status=decom --name $1 | awk -v ORS=' ' 1)
}

nvami () {
    nv  --objecttype node_groups --exactget name=aws1 --get graffitis[name]=$1 --fields value
}

nvlistami () {
    nv --objecttype node_groups --exactget name=aws1 --get graffitis[name]=ami --field name,value
}
getnvgroup () {
    nv --objecttype node_groups --exactget name=$1 --field description,owner
}
ppkick () {
    SERVERS=$(nv --exclude status=decom --name $1 | awk -v ORS=' ' 1)
    for SERVER in $SERVERS; do
        echo "Triggering puppet run on $SERVER"
        tickle $SERVER &
    done
}
tickle () {
    ssh $1 "telnet 127.0.0.1 7140"
}

# Host query functions
function h() {
    if [ $1 == "--all" ]; then
        search='^f.*-'
        domain=$2
    else
        search='^f.{27,28}$'
        domain=$1
    fi
    host -la ${domain}.fanops.net | awk -F" " '{print $1}' | sed -e 's/\.$//g' | egrep ${search}
}
function alh() {
    if [ "$1" == "--all" ]; then
        arg=$1
    fi
    for x in fra1 ams2 iad2 las1 las2 lab1 lax2 sjc1 hkg1
        do h ${arg} ${x}
    done
}

# SSH by Datacenter
DCS='iad2 las2 las1 iad1 sjc1 ams1'
function dssh () {
    DOMAIN=$1
    PATTERN=$2
    host -la ${DOMAIN}.fanops.net | awk -F" " '{print $1}' | sed -e 's/\.$//g' | egrep ${PATTERN}
}
for DC in $DCS; do
    alias $DC="dssh $DC.fanops.net"
done

# AWS tools
if [[ -d $HOME/dev/git/cg-cloud-tools ]]; then
    AWS_BASE_DIR=$HOME/dev/git/cg-cloud-tools
    AWS_CONF_DIR=$HOME/dev/git/cg-cloud-tools-conf/etc
    AWS_CRED_DIR=$HOME/dev/creds/aws
    PROJECT_CRED_DIR=$HOME/dev/creds/project_cred
    PROJECT_BASE_DIR=$HOME/dev/git/cg-cloud-tools-cluster-files
    PYTHONPATH=$PYTHONPATH:$AWS_BASE_DIR/python_libs:$HOME/dev/boto:$AWS_BASE_DIR/bin
    PATH=$PATH:$AWS_BASE_DIR/bin
    export AWS_BASE_DIR AWS_CONF_DIR AWS_CRED_DIR PROJECT_CRED_DIR PROJECT_BASE_DIR PYTHONPATH PATH
    # Generate aws alias profiles for each account
    for account in $(find $AWS_CRED_DIR -mindepth 1 -maxdepth 1 -type d -print | sed 's@.*/@@'); do
        alias aws${account}="unset AWS_CREDENTIAL_FILE
        eval \`awsprofile ${account}\`"
    done
fi

# set title prompts
export PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}\007"'
